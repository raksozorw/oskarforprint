{"version":3,"sources":["components/components/cart/context.js","components/components/mui/CircularIndeterminate.js","components/components/cart/CustomerDetails.js","components/components/cart/index.jsx","components/components/Nav.js","components/components/Print.js","history.js","index.jsx","components/components/index.jsx","components/components/Success.js","components/components/Fail.js"],"names":["CartContext","createContext","CartProvider","children","useState","items","setItems","count","setCount","customer","setCustomer","Provider","value","reduce","acc","item","found","find","_item","sku","quantity","push","itemsWithQuantities","addToCart","newCount","prevState","removeItem","index","newItems","filter","index1","useStyles","makeStyles","theme","root","display","marginLeft","spacing","CircularIndeterminate","classes","className","CircularProgress","CustomerDetails","ctx","useContext","name","setName","email","setEmail","billingAddress","setBillingAddress","billingCity","setBillingCity","billingCode","setBillingCode","shippingAddress","setShippingAddress","shippingCity","setShippingCity","shippingCode","setShippingCode","sameAddress","setSameAddress","confirmed","setConfirmed","handleChange","e","inputName","target","type","onChange","checked","onClick","preventDefault","console","log","disabled","formatPrice","price","toFixed","Cart","stripeToken","stripe","setStripe","spinner","setSpinner","error","setError","useEffect","window","Stripe","serverCheckout","a","axios","post","data","response","redirectToCheckout","sessionId","id","result","message","map","colSpan","length","style","color","Nav","cartCtx","href","fontSize","Print","props","loaded","setLoaded","src","product","img","alt","onLoad","opacity","backgroundImage","createBrowserHistory","ReactDOM","render","StrictMode","history","path","exact","component","productList","setProductList","getProducts","productInfo","products","total","amount","ids","prices","unit_amount_decimal","images","document","getElementById"],"mappings":"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","file":"static/js/main.bb475e74.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const CartContext = createContext(null);\n\nexport default function CartProvider({ children }) {\n  const [items, setItems] = useState([]);\n  const [count, setCount] = useState(0);\n  const [customer, setCustomer] = useState(null);\n\n  function addToCart(item) {\n    const newCount = count + 1;\n    setItems((prevState) => [...prevState, item]);\n    setCount(newCount);\n  }\n\n  function removeItem(index) {\n    const newCount = count - 1;\n    const newItems = items.filter((item, index1) => {\n      return index1 !== index;\n    });\n    setItems(newItems);\n    setCount(newCount);\n  }\n\n  function itemsWithQuantities(items) {\n    return items.reduce((acc, item) => {\n      const found = acc.find((_item) => _item.sku === item.sku);\n      if (found) {\n        found.quantity = found.quantity + 1;\n      } else {\n        acc.push({\n          quantity: 1,\n          ...item,\n        });\n      }\n      return acc;\n    }, []);\n  }\n\n  return (\n    <CartContext.Provider\n      value={{\n        items: itemsWithQuantities(items),\n        addToCart,\n        removeItem,\n        count,\n        setCustomer,\n        customer,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { CartContext } from \"../cart/context\";\n\nexport default function CustomerDetails() {\n  const ctx = useContext(CartContext);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [billingAddress, setBillingAddress] = useState(\"\");\n  const [billingCity, setBillingCity] = useState(\"\");\n  const [billingCode, setBillingCode] = useState(\"\");\n  const [shippingAddress, setShippingAddress] = useState(\"\");\n  const [shippingCity, setShippingCity] = useState(\"\");\n  const [shippingCode, setShippingCode] = useState(\"\");\n  const [sameAddress, setSameAddress] = useState(true);\n  const [confirmed, setConfirmed] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setConfirmed(true);\n    ctx.setCustomer({\n      name,\n      email,\n      billingAddress,\n      billingCity,\n      billingCode,\n      shippingAddress,\n      shippingCity,\n      shippingCode,\n    });\n    console.log(ctx.customer);\n    //axios post to backend, send an email with info\n  };\n\n  const handleChange = (e, inputName) => {\n    switch (inputName) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n      case \"billingAddress\":\n        setBillingAddress(e.target.value);\n        break;\n      case \"billingCode\":\n        setBillingCode(e.target.value);\n        break;\n      case \"billingCity\":\n        setBillingCity(e.target.value);\n        break;\n      case \"shippingAddress\":\n        setShippingAddress(e.target.value);\n        break;\n      case \"shippingCity\":\n        setShippingCity(e.target.value);\n      case \"shippingCode\":\n        setShippingCode(e.target.value);\n        break;\n    }\n  };\n\n  return (\n    <form className='customer-form'>\n      <div>\n        <h2>Contact</h2>\n        <label>Name</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e, \"name\")}\n          value={name}\n        ></input>\n        <label>Email</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e, \"email\")}\n          value={email}\n        ></input>\n      </div>\n\n      <div>\n        <h2>Billing Address</h2>\n        <label>Address</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e, \"billingAddress\")}\n          value={billingAddress}\n        ></input>\n        <label>City</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e, \"billingCity\")}\n          value={billingCity}\n        ></input>\n        <label>Post Code</label>\n        <input\n          type='text'\n          onChange={(e) => handleChange(e, \"billingCode\")}\n          value={billingCode}\n        ></input>\n      </div>\n      <div>\n        <h3>Shipping same as billing?</h3>\n        <input\n          type='checkbox'\n          onChange={() => {\n            if (sameAddress === true) {\n              setSameAddress(false);\n            } else {\n              setSameAddress(true);\n            }\n          }}\n          checked={sameAddress}\n        ></input>\n      </div>\n      {!sameAddress && (\n        <div>\n          <h2>Shipping Address</h2>\n          <label>Address</label>\n          <input\n            type='text'\n            onChange={(e) => handleChange(e, \"shippingAddress\")}\n            value={shippingAddress}\n          ></input>\n          <label>City</label>\n          <input\n            type='text'\n            onChange={(e) => handleChange(e, \"shippingCity\")}\n            value={shippingCity}\n          ></input>\n          <label>Post Code</label>\n          <input\n            type='text'\n            onChange={(e) => handleChange(e, \"shippingCode\")}\n            value={shippingCode}\n          ></input>\n        </div>\n      )}\n\n      <button onClick={handleSubmit} disabled={confirmed}>\n        {confirmed ? \"Confirmed!\" : \"Confirm\"}\n      </button>\n    </form>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { CartContext } from \"../cart/context\";\n\nimport axios from \"axios\";\nimport createMixins from \"@material-ui/core/styles/createMixins\";\nimport CircularIndeterminate from \"../mui/CircularIndeterminate\";\nimport CustomerDetails from \"./CustomerDetails\";\n\nfunction formatPrice(price) {\n  return `£${(price * 0.01).toFixed(2)}`;\n}\n\nfunction totalPrice(items) {\n  return items.reduce((acc, item) => acc + item.quantity * item.price, 0.0);\n}\n\nexport default function Cart({ stripeToken }) {\n  const [stripe, setStripe] = useState(null);\n  const [spinner, setSpinner] = useState(null);\n  const [error, setError] = useState(\"\");\n  const ctx = useContext(CartContext);\n\n  useEffect(() => {\n    if (window.Stripe) {\n      setStripe(window.Stripe(stripeToken));\n    }\n  }, [stripeToken]);\n\n  // sends request to our server with the cart data saved in the context, cart is all client side\n  // the server then redirects client to Stripe Checkout page, we set the return pages\n  const serverCheckout = async () => {\n    setSpinner(\"spin\");\n    const response = await axios.post(\n      \"http://localhost:8888/create-checkout-session\",\n      {\n        data: {\n          items: ctx.items,\n          customer: ctx.customer,\n        },\n      }\n    );\n\n    // When the customer clicks on the button, redirect them to Checkout.\n    const result = await stripe.redirectToCheckout({\n      sessionId: response.data.id,\n    });\n\n    if (result.error) {\n      console.log(result.error.message);\n      // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n      setError(result.error.message);\n      setSpinner(\"error\");\n    }\n  };\n\n  const removeItem = () => {};\n\n  return (\n    <div className='cart-and-checkout-button'>\n      <div className='cart'>\n        <table>\n          <thead>\n            <tr>\n              <th>Item</th>\n              <th>Size</th>\n              <th>Quantity</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ctx.items.map((item, index) => (\n              <tr>\n                <td>{item.name}</td>\n                <td>50x70cm</td>\n                <td>{item.quantity}</td>\n                <td>{formatPrice(item.price)}</td>\n                <td>\n                  <button onClick={() => ctx.removeItem(index)}>X</button>\n                </td>\n              </tr>\n            ))}\n            <tr>\n              <td colSpan={3}>Total:</td>\n              <td>{formatPrice(totalPrice(ctx.items))}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div>\n          <CustomerDetails />\n          <div>\n            {ctx.items.length > 0 && ctx.customer !== null && (\n              <div>\n                <div className='stripe-button'>\n                  {spinner === null && (\n                    <button onClick={serverCheckout}>\n                      Checkout With Stripe\n                    </button>\n                  )}\n                  {spinner === \"spin\" && <button>Loading ... </button>}\n                  {spinner === \"error\" && (\n                    <div>\n                      <button onClick={serverCheckout}>\n                        Checkout With Stripe\n                      </button>\n                      <p style={{ color: \"red\" }}>{error}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CartContext } from \"../components/cart/context\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nexport default function Nav() {\n  const cartCtx = useContext(CartContext);\n\n  return (\n    <nav>\n      <div className='nav-div'>\n        <div className='nav-title'>\n          <h1>OSKAR FOR PRINT</h1>\n        </div>\n        <a href='#cart'>\n          <div className='cart-icon'>\n            <div className='cart-count'>\n              <ShoppingCartIcon fontSize='medium' /> <div>{cartCtx.count}</div>\n            </div>\n          </div>\n        </a>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { CartContext } from \"../components/cart/context\";\nimport CircularIndeterminate from \"./mui/CircularIndeterminate\";\n\nexport default function Print(props) {\n  const [loaded, setLoaded] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  function formatPrice(price) {\n    return `£${(price * 0.01).toFixed(2)}`;\n  }\n\n  return (\n    <div className='print'>\n      <div className='print-box'>\n        <img\n          src={props.product.img}\n          alt={props.product.name}\n          onLoad={() => {\n            console.log(\"loaded\");\n            setLoaded(true);\n          }}\n          style={\n            loaded\n              ? {\n                  opacity: \"1\",\n                  display: \"inline-block\",\n                  backgroundImage:\n                    \"linear-gradient( to right, rgba(255, 96, 96, 0), rgba(0, 17, 255,0))\",\n                }\n              : {\n                  opacity: \"0\",\n                  display: \"none\",\n                  backgroundImage:\n                    \"linear-gradient( to right, rgba(255, 96, 96, 0), rgba(0, 17, 255,0))\",\n                }\n          }\n        ></img>\n        {!loaded && <CircularIndeterminate />}\n      </div>\n\n      <h2>{props.product.name}</h2>\n\n      <h3>{formatPrice(props.product.price)}</h3>\n\n      <div>\n        <button\n          onClick={() => {\n            cartCtx.addToCart(props.product);\n          }}\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Cart from \"./components/components/cart\";\nimport Store from \"./components/components\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport CartProvider from \"./components/components/cart/context\";\nimport \"./styles.css\";\nimport Success from \"./components/components/Success\";\nimport history from \"./history\";\nimport Fail from \"./components/components/Fail\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CartProvider>\n      <Router history={history}>\n        <Switch>\n          <Route path='/' exact component={Store} />\n          <Route path='/success' exact component={Success} />\n          <Route path='/fail' exact component={Fail} />\n        </Switch>\n      </Router>\n    </CartProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useState, useContext, useEffect, Suspense } from \"react\";\nimport axios from \"axios\";\n\nimport Cart from \"../components/cart\";\n\nimport CircularIndeterminate from \"./mui/CircularIndeterminate\";\nimport Nav from \"./Nav\";\nimport Print from \"./Print\";\nexport default function Store() {\n  const [productList, setProductList] = useState([]);\n  // first map and set the state for loaded.index and then set the state again from onLoad with loaded.index\n\n  const getProducts = async () => {\n    const response = await axios.post(\"http://localhost:8888/productList\");\n    console.log(response.data);\n    console.log(response.data);\n\n    const productInfo = response.data.products.data.reduce(\n      (total, amount, index) => {\n        const ids = response.data.prices.data.reduce((total, amount) => {\n          total.push({ sku: amount.id, price: amount.unit_amount_decimal });\n\n          return total;\n        }, []);\n        total.push({ name: amount.name, img: amount.images[0], ...ids[index] });\n\n        return total;\n      },\n      []\n    );\n\n    // another solution might be possible with object.entries\n\n    console.log(productInfo);\n    setProductList(productInfo);\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  return (\n    <div className='all-prints'>\n      {productList.length === 0 && (\n        <div className='loading'>\n          <CircularIndeterminate />\n        </div>\n      )}\n      {productList.length > 0 && (\n        <div>\n          <Nav />\n\n          <div className='prints'>\n            {productList.map((product) => {\n              return <Print product={product} />;\n            })}\n          </div>\n          <div id='cart'></div>\n          <Cart stripeToken='pk_live_51HUrfvBzBdhEW71Sa8jN89KrJapvljYfHjzH6HVzm44CsYzkcRRcJH3nku5B5CgSBCfbtI1ZrlaJ3t6Sa90tvewq00gn0lN6YD' />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Success() {\n  return (\n    <div>\n      <h2>Thanks for your order!</h2>\n      <h2>Your delivery is on its way.</h2>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Fail() {\n  return (\n    <div>\n      <h2>\n        There was a problem with your order. Please try again, or contact us if\n        you require assistance.\n      </h2>\n    </div>\n  );\n}\n"],"sourceRoot":""}